v3.0 hex words addressed
# MIPS code ROM for Logisim
# Sun Nov 26 09:41:03 GMT-05:00 2023
# 11 entries for text segment in symbol table
# segment address symbol source
#  text  0x0000000c        loop1  [line 26]
#  text  0x00000020         end1  [line 33]
#  text  0x00000024         main  [line 37]
#  text  0x00000030     mainLoop  [line 42]
#  text  0x00000054     mainDone  [line 56]
#  text  0x00000058     loopPass  [line 59]
#  text  0x00000068     passNext  [line 64]
#  text  0x00000078     swapPass  [line 70]
#  text  0x00000088          end  [line 76]
#  text  0x00000094        loop2  [line 81]
#  text  0x000000a8         end2  [line 88]
00000000: 3c 08 80 00  # lui $8, -32768
00000004: 3c 04 00 00  # lui $4, 0
00000008: 34 84 00 24  # ori $4, $4, 36
0000000c: 80 87 00 00  # lb $7, 0($4)
00000010: 10 e0 00 1d  # beq $7, $0, 29 # 116 bytes
00000014: a1 07 00 08  # sb $7, 8($8)
00000018: 24 84 00 01  # addiu $4, $4, 1
0000001c: 08 00 00 03  # j 0x0000000c
00000020: 00 00 00 00  # sll $0, $0, 0
00000024: 3c 02 00 00  # lui $2, 0
00000028: 34 42 00 00  # ori $2, $2, 0
0000002c: 8c 42 00 00  # lw $2, 0($2)
00000030: 24 43 ff ff  # addiu $3, $2, -1
00000034: 18 60 00 07  # blez $3, 7 # 28 bytes
00000038: 3c 04 00 00  # lui $4, 0
0000003c: 34 84 00 04  # ori $4, $4, 4
00000040: 34 05 00 00  # ori $5, $0, 0
00000044: 0c 00 00 16  # jal 0x00000058
00000048: 10 a0 00 02  # beq $5, $0, 2 # 8 bytes
0000004c: 24 42 ff ff  # addiu $2, $2, -1
00000050: 10 00 ff f4  # beq $0, $0, -12 # -48 bytes
00000054: 08 00 00 22  # j 0x00000088
00000058: 8c 86 00 00  # lw $6, 0($4)
0000005c: 8c 87 00 04  # lw $7, 4($4)
00000060: 00 c7 08 23  # subu $1, $6, $7
00000064: 1c 20 00 04  # bgtz $1, 4 # 16 bytes
00000068: 24 84 00 04  # addiu $4, $4, 4
0000006c: 24 63 ff ff  # addiu $3, $3, -1
00000070: 1c 60 ff f9  # bgtz $3, -7 # -28 bytes
00000074: 03 e0 00 08  # jr $31
00000078: ac 86 00 04  # sw $6, 4($4)
0000007c: ac 87 00 00  # sw $7, 0($4)
00000080: 34 05 00 01  # ori $5, $0, 1
00000084: 08 00 00 1a  # j 0x00000068
00000088: 00 00 00 00  # sll $0, $0, 0
0000008c: 3c 04 00 00  # lui $4, 0
00000090: 34 84 00 2f  # ori $4, $4, 47
00000094: 80 87 00 00  # lb $7, 0($4)
00000098: 10 e0 00 03  # beq $7, $0, 3 # 12 bytes
0000009c: a1 07 00 08  # sb $7, 8($8)
000000a0: 24 84 00 01  # addiu $4, $4, 1
000000a4: 08 00 00 25  # j 0x00000094
000000a8: 00 00 00 00  # sll $0, $0, 0
